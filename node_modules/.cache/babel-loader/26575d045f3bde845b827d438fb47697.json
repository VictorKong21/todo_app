{"ast":null,"code":"import _toConsumableArray from \"/Users/victor/Desktop/Web Development/todo_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/victor/Desktop/Web Development/todo_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/victor/Desktop/Web Development/todo_app/src/components/Form.jsx\";\n// TODO:\n// 1) Comlpete -> delete from string, remove item from array\n// 2) Use Tailwind to update visual\n\n// Done: \n// 1) Autofocus input field after submit\n// 2) Clear input field after submit\n// 3) Disable when empty item is added \n// 4) Add a count to number of TODOs\n\nimport React, { useState } from \"react\";\nimport ItemList from \"./ItemList\";\nimport { v4 as uuidv4 } from 'uuid';\nfunction Form() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    list = _useState2[0],\n    setList = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  function handleInput(e) {\n    setInput(e.target.value);\n  }\n  function handleList(e) {\n    e.preventDefault(); //Prevent page auto refresh on click\n    input !== \"\" && setList(function (item) {\n      return [].concat(_toConsumableArray(item), [input]);\n    }); //Prevent user from adding empty todo item\n    setInput(\"\"); // Clear input field after adding todo item\n  }\n\n  function handleComplete(e, index) {\n    e.preventDefault(); //Prevent page auto refresh on click\n    console.log(\"clicked on complete\" + index);\n    // console.log(\"Index of item clicked in array: \")\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInput,\n    name: \"todo-input\",\n    placeholder: \"Add TODO here\",\n    value: input,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Add Item\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, list.map(function (todoItem, index) {\n    return /*#__PURE__*/React.createElement(ItemList, {\n      key: uuidv4(),\n      text: todoItem,\n      complete: function complete(e, index) {\n        return handleComplete(e, index);\n      },\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 44\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, list.length, \" left to do\"));\n}\nexport default Form;","map":{"version":3,"names":["React","useState","ItemList","v4","uuidv4","Form","list","setList","input","setInput","handleInput","e","target","value","handleList","preventDefault","item","handleComplete","index","console","log","map","todoItem","length"],"sources":["/Users/victor/Desktop/Web Development/todo_app/src/components/Form.jsx"],"sourcesContent":["// TODO:\n// 1) Comlpete -> delete from string, remove item from array\n// 2) Use Tailwind to update visual\n\n// Done: \n// 1) Autofocus input field after submit\n// 2) Clear input field after submit\n// 3) Disable when empty item is added \n// 4) Add a count to number of TODOs\n\nimport React, { useState } from \"react\";\nimport ItemList from \"./ItemList\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Form() {\n\n    const [list, setList] = useState([]);\n    const [input, setInput] = useState(\"\");\n\n    function handleInput(e) {\n        setInput(e.target.value);\n    }\n\n    function handleList(e) {\n        e.preventDefault();  //Prevent page auto refresh on click\n        input !== \"\" && setList(item => [...item, input]) //Prevent user from adding empty todo item\n        setInput(\"\"); // Clear input field after adding todo item\n    }\n\n    function handleComplete(e, index) {\n        e.preventDefault();  //Prevent page auto refresh on click\n        console.log(\"clicked on complete\" + index);\n        // console.log(\"Index of item clicked in array: \")\n    }\n\n    return (<form>\n        <input onChange={handleInput} name=\"todo-input\" placeholder=\"Add TODO here\" value={input} autoFocus></input>\n        <button onClick={handleList}>Add Item</button>\n        <ul>{list.map((todoItem, index) => <ItemList key={uuidv4()} text={todoItem} complete={(e, index) => handleComplete(e, index)} index={index} />)}</ul>\n        <p>{list.length} left to do</p>\n    </form>);\n\n}\n\nexport default Form;\n\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,IAAI,GAAG;EAAA;EAAA,gBAEYJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BK,IAAI;IAAEC,OAAO;EAAA,iBACMN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BO,KAAK;IAAEC,QAAQ;EAEtB,SAASC,WAAW,CAACC,CAAC,EAAE;IACpBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B;EAEA,SAASC,UAAU,CAACH,CAAC,EAAE;IACnBA,CAAC,CAACI,cAAc,EAAE,CAAC,CAAE;IACrBP,KAAK,KAAK,EAAE,IAAID,OAAO,CAAC,UAAAS,IAAI;MAAA,oCAAQA,IAAI,IAAER,KAAK;IAAA,CAAC,CAAC,EAAC;IAClDC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB;;EAEA,SAASQ,cAAc,CAACN,CAAC,EAAEO,KAAK,EAAE;IAC9BP,CAAC,CAACI,cAAc,EAAE,CAAC,CAAE;IACrBI,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGF,KAAK,CAAC;IAC1C;EACJ;;EAEA,oBAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACJ;IAAO,QAAQ,EAAER,WAAY;IAAC,IAAI,EAAC,YAAY;IAAC,WAAW,EAAC,eAAe;IAAC,KAAK,EAAEF,KAAM;IAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eAC5G;IAAQ,OAAO,EAAEM,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAkB,eAC9C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKR,IAAI,CAACe,GAAG,CAAC,UAACC,QAAQ,EAAEJ,KAAK;IAAA,oBAAK,oBAAC,QAAQ;MAAC,GAAG,EAAEd,MAAM,EAAG;MAAC,IAAI,EAAEkB,QAAS;MAAC,QAAQ,EAAE,kBAACX,CAAC,EAAEO,KAAK;QAAA,OAAKD,cAAc,CAACN,CAAC,EAAEO,KAAK,CAAC;MAAA,CAAC;MAAC,KAAK,EAAEA,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAAA,EAAC,CAAM,eACrJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIZ,IAAI,CAACiB,MAAM,gBAAgB,CAC5B;AAEX;AAEA,eAAelB,IAAI"},"metadata":{},"sourceType":"module"}